#ifndef DEBUG_H
#define DEBUG_H

/*debug constants to output to gpio pins, first 2 bits indicate which task (0 = main), last 6 indicate specific section*/
#define MAIN_TASK_DLOC_ENTER_TASK 0x01
#define MAIN_TASK_DLOC_BEFORE_WHILE 0x02
#define MAIN_TASK_DLOC_BEFORE_RECEIVE_FROM_QUEUE_IN_WHILE 0x03
#define MAIN_TASK_DLOC_AFTER_RECEIVE_FROM_QUEUE_IN_WHILE 0x04
#define MAIN_TASK_DLOC_ENTER_TIMERONE_ISR 0x05
#define MAIN_TASK_DLOC_LEAVE_TIMERONE_ISR 0x06
#define MAIN_TASK_DLOC_BEFORE_COMM_WITH_QUEUE_IN_TIMERONE_ISR 0x07
#define MAIN_TASK_DLOC_AFTER_COMM_WITH_QUEUE_IN_TIMERONE_ISR 0x08
#define MAIN_TASK_DLOC_ENTER_TIMERTWO_ISR 0x09
#define MAIN_TASK_DLOC_LEAVE_TIMERTWO_ISR 0x0a
#define MAIN_TASK_DLOC_BEFORE_COMM_WITH_QUEUE_IN_TIMERTWO_ISR 0x0b
#define MAIN_TASK_DLOC_AFTER_COMM_WITH_QUEUE_IN_TIMERTWO_ISR 0x0c
#define MAIN_TASK_DLOC_FAILED_TIMERTWO_OPEN 0x0d
#define MAIN_TASK_DLOC_FAILED_TIMERTWO_START 0x0e
#define MAIN_TASK_DLOC_FAILED_TIMERONE_OPEN 0x0f
#define MAIN_TASK_DLOC_FAILED_TIMERONE_START 0x10
#define MAIN_TASK_DLOC_FAILED_ADC_READ 0x11
#define MAIN_TASK_DLOC_FAILED_UART_OPEN 0x12
#define MAIN_TASK_DLOC_PARAM_OUT_OF_BOUNDS 0x13

#include <ti/drivers/UART.h>
#include <stdio.h>

UART_Handle uart;

void dbgUARTVal(unsigned char outVal);
void dbgOutputLoc(unsigned int outLoc);
void fatalError(unsigned int outLoc);
void initUART();
void initDebugGPIO();

#endif
